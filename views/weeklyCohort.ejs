<%- include("partials/header.ejs") %>
<div class="table-header">
    <h1>Weekly Quantity Data</h1>
    <div class="input-group">
        <i class="fa-solid fa-magnifying-glass"></i>
        <input id="input-search" type="search" placeholder="Search....">
    </div>
    
    <form  id="filterForm" method="GET" action="/weeklycohort">
        <select name="year" onchange="this.form.submit()">
            <option value="">Select a year</option>
            <option value="2023">2023</option>
            <option value="2024">2024</option>
            <option value="2025">2025</option>
        </select>
    </form>
    
    <select id="analysisType" aria-label="Select analysis type" hidden>
        <option value="quantity">Bottle Quantity</option>
        <option value="revenue">Revenue</option>
    </select>
    <button id="exportButton" class="exbotton" aria-label="Export data to Excel"><i class="fa-solid fa-download"></i></button>
</div>

<div class="sticky-button-container" id="scrollToBottomButton">
    <button><i class="fa-solid fa-arrow-down"></i></button>
</div>

<div class="table-container">
    
    <div id="quantityTable">
        <table>
            <thead>
                <tr style="position: sticky; top: 0; z-index: 200;">
                    <th>SlNo.</th>
                    <th>Brand Name</th>
                    <th>Status</th> 
                    <% sortedUniqueWeeks.forEach(week => { %>
                        <th><%= week.replace('Week ', 'W') %></th>
                    <% }); %>
                    <th class="fixed-total">Total Quantity</th>
                    <th>Annual Weekly Average</th>
                    <th>Last 4 wk Avg</th>
                    <th>Last 12 wk Avg</th>
                </tr>
            </thead>
            <tahead>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <% BrandWeeklyData.forEach(({ dateRange }) => { %>
                        <th><%= dateRange %></th>
                    <% }); %>
                    <th class="fixed-total"></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <% let slno = 0; %>
                <% const brandsSet = new Set(); %>
                <% BrandWeeklyData.forEach(({ week, brands }) => { %>
                    <% brands.forEach(([brandName, quantity]) => { %>
                        <% if (!brandsSet.has(brandName)) { %>
                            <tr>
                                <% slno += 1; %>
                                <td><%= slno %></td>
                                <td class="fixed-column"><%= brandName || 'Unknown'%></td>
                                <td>
                                    <% if (brandName) { %>
                                      <%= customerDictionary[brandName.trim()].CustomerStatus || 'Not Found' %>
                                    <% } else { %>
                                      Not Found
                                    <% } %>
                                </td>
                                <% let totalForBrand = 0; %>
                                <% sortedUniqueWeeks.forEach(week => { %>
                                    <% const weeklyData = BrandWeeklyData.find(data => data.week === week); %>
                                    <% const quantity = weeklyData ? weeklyData.brands.find(([name]) => name === brandName)?.[1] || 0 : 0; %>
                                    <td><%= quantity %></td>
                                    <% totalForBrand += quantity; %>
                                <% }); %>
                                <td class="fixed-total"><%= totalForBrand %></td>
                                
                                <td>
                                    <%= (totalForBrand / sortedUniqueWeeks.length).toFixed(2) %>
                                </td>
                                <% let last4total = 0; %>
                                <% const last4Weeks = sortedUniqueWeeks.slice(-4); %>
                                <% last4Weeks.forEach(week => { %>
                                    <% const weeklyData = BrandWeeklyData.find(data => data.week === week); %>
                                    <% const lastquantity = weeklyData ? weeklyData.brands.find(([name]) => name === brandName)?.[1] || 0 : 0; %>
                                    <% last4total += lastquantity; %>
                                <% }); %>
                                
                                <td>                                   
                                    <%= (last4total / last4Weeks.length).toFixed(2) %>
                                </td>
                                <td>
                                    <% let last12total = 0; %>
                                    <% const last12Weeks = sortedUniqueWeeks.slice(-12); %>
                                    <% last12Weeks.forEach(week => { %>
                                        <% const weeklyData = BrandWeeklyData.find(data => data.week === week); %>
                                        <% const last12quantity = weeklyData ? weeklyData.brands.find(([name]) => name === brandName)?.[1] || 0 : 0; %>
                                        <% last12total += last12quantity; %>
                                    <% }); %>
                                    <%= (last12total / last12Weeks.length).toFixed(2) %>
                                </td>
                            </tr>
                            <% brandsSet.add(brandName); %>
                        <% } %>
                    <% }); %>
                <% }); %>
            </tbody>
            
            <tfoot>
                <tr style="background-color: rgb(97, 183, 218); font-size: 18px; position: sticky; bottom: 0; z-index: 200;">
                    <td style="background-color: rgb(97, 183, 218); font-size: 18px;"></td>
                    <td style="background-color: rgb(97, 183, 218); font-size: 18px;">Total Quantity</td>
                    <td style="background-color: rgb(97, 183, 218); font-size: 18px;"></td>
                    <% sortedUniqueWeeks.forEach(week => { %>
                        <td style="background-color: rgb(97, 183, 218); font-size: 18px;">
                            <%= weeklyTotal[week] || 0 %>
                        </td>
                    <% }); %>
                    <td style="background-color: rgb(97, 183, 218); font-size: 18px;">
                        <% 
                        const grandTotal = Object.values(weeklyTotal).reduce((acc, total) => acc + total, 0);
                        %>
                        <%= grandTotal %>
                    </td>
                </tr>
            </tfoot>
            
            
        </table>
    </div>
</div>  
</div>

<%- include("partials/footer.ejs") %>