<%- include("partials/header.ejs") %>

<style>
  body {
    background-color: #181818;
    color: #E5E5E5;
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
  }


  .table-header {
    background-color: #252525; 
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 20px;
  }

  .table-header h2 {
    font-size: 24px;
    margin: 0;
    color: #E5E5E5;
    font-weight: 500;
  }

  .table-header label {
    color: #E5E5E5;
    margin-left: 10px;
    font-size: 14px;
  }

  .table-header select {
    padding: 8px;
    background-color: #333;
    color: #E5E5E5;
    border: none;
    border-radius: 5px;
    margin-left: 10px;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .table-header select:hover,
  .table-header select:focus {
    background-color: #0e4e92b9;
    color: white;
    outline: none;
  }

  .chart-container {
    background-color: #1a1a1a;
    padding: 30px;
    margin: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  }


  #myPlot {
    width: 100%;
    height: 90%;
    border-radius: 8px;
    background-color: #121212;
  }

  button {
    background-color: #007bff;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
  }

  button:hover {
    background-color: #0056b3;
  }
</style>

<div class="table-header">
  <h2 id="customerName">Customer: <%= customersData[0].name %></h2>
  <div>
    <label for="customerSelect">Select Customer:</label>
    <select id="toggleCustomers">
      <% customersData.forEach(customer => { %>
        <option value="<%= customer.name %>"><%= customer.name %></option>
      <% }) %>
    </select>

  <form method="get" action="/revenueChart">
    <label for="yearSelect">Select Year:</label>
    <select name="year" id="toggleYear" onchange="this.form.submit()">
      <% const currentYear = req.query.year || '2024' %>
      <option value="2023" <%= currentYear === '2023' ? 'selected' : '' %>>2023</option>
      <option value="2024" <%= currentYear === '2024' ? 'selected' : '' %>>2024</option>
    </select>
  </form>
   
  </div>
</div>

<div class="chart-container">
  <div id="myPlot"></div>

  <script>
    const customersData = JSON.stringify(customersData);

    let currentCustomerIndex = 0;

    function renderGraph(customerName) {
      const customer = customersData.find(cust => cust.name.trim() === customerName);

      if (!customer) {
        alert("Customer not found!");
        return;
      }
      
      const trace = {
        x: customer.weeks,
        y: customer.revenues,
        name: customer.name,
        mode: 'lines+markers+text',
        text: customer.revenues,
        textposition: 'left center',
        marker: { size: 12 },
        textfont: {
          family: 'Roboto, sans-serif',
          size: 12,
          color: '#E5E5E5',
        },
        marker: {
          size: 10,
          color: '#1E90FF',
          line: {
            color: 'white',
            width: 1,
          },
        },
        line: {
          color: '#1E90FF',
          width: 2,
        }
      };

      const layout = {
        title: {
          text: `Weekly Revenue for <b>${customer.name}</b>`,
          font: { size: 20, color: '#E5E5E5' },
        },
        xaxis: {
          title: { text: 'Week', font: { size: 14, color: '#E5E5E5' } },
          tickangle: -45,
          tickcolor: '#E5E5E5',
          color:"white"
        },
        yaxis: {
          title: { text: 'Revenue', font: { size: 14, color: '#E5E5E5' } },
          gridcolor: '#333',
          tickcolor: '#E5E5E5',
          color:"white"
        },
        plot_bgcolor: '#121212',
        paper_bgcolor: '#121212',
        margin: { t: 50, b: 100, l: 60, r: 30 },
        hovermode: 'closest',
      };

      Plotly.newPlot('myPlot', [trace], layout);
      document.getElementById('customerName').innerText = `Customer: ${customer.name}`;
    }

    renderGraph(customersData[0].name);

    document.getElementById('toggleCustomers').onchange = () => {
      const selectedCustomer = document.getElementById('toggleCustomers').value;
      renderGraph(selectedCustomer);
    }

    // document.getElementById('toggleYear').onchange = () => {
    //   const selectedYear = document.getElementById('toggleYear').value;
    //   renderGraph(selectedYear);
    // }
  </script>
</div>

<%- include("partials/footer.ejs") %>
